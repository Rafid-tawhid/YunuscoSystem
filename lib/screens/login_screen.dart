import 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:yunusco_group/providers/auth_provider.dart';import 'package:yunusco_group/screens/home_page.dart';import '../helper_class/dashboard_helpers.dart';class LoginScreen extends StatefulWidget {  @override  _LoginScreenState createState() => _LoginScreenState();}//class _LoginScreenState extends State<LoginScreen> {  final _formKey = GlobalKey<FormState>();  final TextEditingController _nameController = TextEditingController();  final TextEditingController _passwordController = TextEditingController();  bool _obscurePassword = true; // ðŸ‘ˆ Add this  @override  void initState() {    // TODO: implement initState    super.initState();  }  void getUserInfo() async {    String email = await DashboardHelpers.getString('email');    String pass = await DashboardHelpers.getString('pass');    if (email != '' && pass != '') {      setState(() {        _nameController.text = email;        _passwordController.text = pass;      });    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.white,      body: Center(        child: Padding(          padding: const EdgeInsets.symmetric(horizontal: 24.0),          child: Column(            mainAxisAlignment: MainAxisAlignment.center,            crossAxisAlignment: CrossAxisAlignment.center,            mainAxisSize: MainAxisSize.min,            children: [              Image.asset(                'assets/images/logo1-min.png',                height: 120,                width: 200,              ),              const SizedBox(height: 20),              Form(                key: _formKey,                child: Column(                  children: [                    // Username Field                    TextFormField(                      controller: _nameController,                      decoration: const InputDecoration(                        labelText: "Enter Username",                        border: OutlineInputBorder(),                        prefixIcon: Icon(Icons.email, color: Colors.indigo),                      ),                      validator: (value) {                        if (value == null || value.isEmpty) {                          return "Please enter username";                        }                        return null;                      },                    ),                    const SizedBox(height: 16),                    // Password Field with Eye Icon                    TextFormField(                      controller: _passwordController,                      obscureText: _obscurePassword,                      decoration: InputDecoration(                        labelText: "Password",                        border: const OutlineInputBorder(),                        prefixIcon:                            const Icon(Icons.lock, color: Colors.indigo),                        suffixIcon: IconButton(                          icon: Icon(                            _obscurePassword                                ? Icons.visibility_off                                : Icons.visibility,                            color: Colors.grey,                          ),                          onPressed: () {                            setState(() {                              _obscurePassword = !_obscurePassword;                            });                          },                        ),                      ),                      validator: (value) {                        if (value == null || value.isEmpty) {                          return "Please enter your password";                        } else if (value.length < 6) {                          return "Password must be at least 6 characters long";                        }                        return null;                      },                    ),                    const SizedBox(height: 20),                    // Login Button                    SizedBox(                      width: double.infinity,                      child: Consumer<AuthProvider>(                        builder: (context, provider, _) => ElevatedButton(                          style: ElevatedButton.styleFrom(                            backgroundColor: Colors.indigo,                            padding: const EdgeInsets.symmetric(vertical: 14),                            shape: RoundedRectangleBorder(                              borderRadius: BorderRadius.circular(8),                            ),                          ),                          onPressed: () async {                            if (_formKey.currentState!.validate()) {                              if (await provider.login(                                _nameController.text.trim(),                                _passwordController.text.trim(),                              )) {                                DashboardHelpers.setString(                                    'email', _nameController.text.trim());                                DashboardHelpers.setString(                                    'pass', _passwordController.text.trim());                                ScaffoldMessenger.of(context).showSnackBar(                                  const SnackBar(                                      content: Text("Login Successful")),                                );                                Navigator.push(                                  context,                                  MaterialPageRoute(                                      builder: (context) => HomeScreen()),                                );                              } else {                                ScaffoldMessenger.of(context).showSnackBar(                                  const SnackBar(                                      content: Text("Login Unsuccessful")),                                );                              }                            }                          },                          child: provider.isLoading                              ? const CircularProgressIndicator(                                  color: Colors.white)                              : const Text(                                  "Login",                                  style: TextStyle(                                      fontSize: 18, color: Colors.white),                                ),                        ),                      ),                    ),                  ],                ),              ),            ],          ),        ),      ),    );  }}